openapi: "3.0.3"
info:
  title: STD23028 - TD1-2
  version: "1.0.2"
servers:
  - url: https://localhost:8080/STD23028/abega
paths:
  /customers:
    get:
      tags:
        - Customers
      summary: get all customers
      operationId: getAllCustomers
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: integer
            example: 5
        - in: query
          name: pageSize
          required: true
          schema:
            type: integer
            example: 6
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customers'
    post:
      tags:
        - Customers
      summary: add customers
      operationId: addCustomers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Customers"

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customers"
    put:
      tags:
        - Customers
      summary: update customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CustomersWithId"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomersWithId"
    delete:
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    example: "id1"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomersWithId"


components:
  schemas:
    Customers:
      type: object
      properties:
        name:
          type: string
          example: Razafindratelo Abeg√†
        age:
          type: integer
          format: int32
          example: 19
    CustomerId:
      type: object
      properties:
        CustomerId:
          type: string
          example: "cUsT-120d-df8x"
    CustomersWithId:
      allOf:
        - $ref: "#/components/schemas/Customers"
        - $ref: "#/components/schemas/CustomerId"
          required:
            - id



